/* Generated By:JavaCC: Do not edit this line. LexicalAnalyserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LexicalAnalyserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 7;
  /** RegularExpression Id. */
  int BOOL = 8;
  /** RegularExpression Id. */
  int CONST = 9;
  /** RegularExpression Id. */
  int DO = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int FALSE = 12;
  /** RegularExpression Id. */
  int IF = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int MAIN = 15;
  /** RegularExpression Id. */
  int NOT = 16;
  /** RegularExpression Id. */
  int OR = 17;
  /** RegularExpression Id. */
  int REAL = 18;
  /** RegularExpression Id. */
  int RETURN = 19;
  /** RegularExpression Id. */
  int STRING = 20;
  /** RegularExpression Id. */
  int THEN = 21;
  /** RegularExpression Id. */
  int TRUE = 22;
  /** RegularExpression Id. */
  int VAR = 23;
  /** RegularExpression Id. */
  int VOID = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int BEGIN = 26;
  /** RegularExpression Id. */
  int END = 27;
  /** RegularExpression Id. */
  int LETTER = 28;
  /** RegularExpression Id. */
  int CHAR = 29;
  /** RegularExpression Id. */
  int ID = 30;
  /** RegularExpression Id. */
  int DIGIT = 31;
  /** RegularExpression Id. */
  int NUM = 32;
  /** RegularExpression Id. */
  int DEC = 33;
  /** RegularExpression Id. */
  int LPAREN = 34;
  /** RegularExpression Id. */
  int RPAREN = 35;
  /** RegularExpression Id. */
  int ERR = 36;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"and\"",
    "\"bool\"",
    "\"const\"",
    "\"do\"",
    "\"else\"",
    "\"false\"",
    "\"if\"",
    "\"int\"",
    "\"main\"",
    "\"not\"",
    "\"or\"",
    "\"real\"",
    "\"return\"",
    "\"string\"",
    "\"then\"",
    "\"true\"",
    "\"var\"",
    "\"void\"",
    "\"while\"",
    "\"begin\"",
    "\"end\"",
    "<LETTER>",
    "<CHAR>",
    "<ID>",
    "\"[0-9]\"",
    "\"<DIGIT>+\"",
    "\"<NUM>*.<NUM>\"",
    "\"(\"",
    "\")\"",
    "<ERR>",
  };

}
